" Plugins
    call plug#begin('~/.nvim/plugged')

    Plug 'https://github.com/kien/rainbow_parentheses.vim'
    Plug 'terryma/vim-smooth-scroll'
    Plug 'scrooloose/nerdtree', { 'on':  ['NERDTreeToggle', 'NERDTreeFocus'] }
    Plug 'scrooloose/nerdcommenter'
    Plug 'scrooloose/syntastic'
    Plug 'tpope/vim-surround'
    Plug 'tpope/vim-repeat'
    Plug 'bling/vim-airline'
    Plug 'pangloss/vim-javascript', { 'for': 'javascript' }
    Plug 'https://github.com/etaoins/vim-volt-syntax'
    Plug 'vim-scripts/a.vim'
    Plug 'marijnh/tern_for_vim'
    Plug 'othree/html5.vim'
    Plug 'Valloric/YouCompleteMe'
    Plug 'kshenoy/vim-signature'
    Plug 'NLKNguyen/papercolor-theme'
    Plug 'Yggdroot/indentLine'
    Plug 'Raimondi/delimitMate'
    Plug 'godlygeek/tabular'
    Plug 'easymotion/vim-easymotion'

    call plug#end()

" Rainbow Parantheses
    " colours
    let g:rbpt_colorpairs = [
        \ ['brown',       'RoyalBlue3'],
        \ ['Darkblue',    'SeaGreen3'],
        \ ['darkgray',    'DarkOrchid3'],
        \ ['darkgreen',   'firebrick3'],
        \ ['darkcyan',    'RoyalBlue3'],
        \ ['darkred',     'SeaGreen3'],
        \ ['darkmagenta', 'DarkOrchid3'],
        \ ['brown',       'firebrick3'],
        \ ['gray',        'RoyalBlue3'],
        \ ['darkred',     'DarkOrchid3'],
        \ ['black',       'SeaGreen3'],
        \ ['darkmagenta', 'DarkOrchid3'],
        \ ['Darkblue',    'firebrick3'],
        \ ['darkgreen',   'RoyalBlue3'],
        \ ['darkcyan',    'SeaGreen3'],
        \ ['red',         'firebrick3'],
        \ ]

    let g:rbpt_max = 16
    let g:rbpt_loadcmd_toggle = 0

    " Autoload
    au VimEnter * RainbowParenthesesToggle
    au Syntax * RainbowParenthesesLoadRound
    au Syntax * RainbowParenthesesLoadSquare
    au Syntax * RainbowParenthesesLoadBraces

" Airline
    let g:airline#extensions#branch#enabled    = 1
    let g:airline#extensions#syntastic#enabled = 1
    let g:airline#extensions#tabline#enabled   = 1

" You Complete Me
    let g:ycm_autoclose_preview_window_after_insertion = 1

" indentLine
    let g:indentLine_color_term = 239
    au VimEnter * IndentLinesEnable


" Easy Motion
    " Turn on case insensitive feature
    let g:EasyMotion_smartcase = 1
    " keep cursor colum when JK motion
    let g:EasyMotion_startofline = 0
    " Smartsign (type `3` and match `3`&`#`)
    let g:EasyMotion_use_smartsign_us = 1









" Key rebindings
    nmap <space> :

    " leader key
    let mapleader = ","

    " for learning
    nnoremap j gj
    nnoremap k gk
    inoremap <F1> <ESC>
    nnoremap <F1> <ESC>
    vnoremap <F1> <ESC>

    " pasting
    nnoremap <F2> :set invpaste paste?<CR>
    set pastetoggle=<F2>
    set showmode

    " current date
    let dateformat = "%Y-%m-%d"
    nnoremap <F6> "=strftime(dateformat)<CR>P
    inoremap <F6> <C-R>=strftime(dateformat)<CR>

    " make escaping the terminal much easier
    tnoremap <Esc> <c-\><c-n>

    " Searching (disabled: overwritten by EasyMotion)
    "nnoremap / /\v
    "vnoremap / /\v

    nnoremap <tab> %
    vnoremap <tab> %

    " leader mappings
    " ,w creates a new vertical split and switches to it
    nnoremap <leader>w <C-w>v<C-w>l

    nnoremap <leader><space> :noh<cr>


" Plugin keys

    " NERDTree
        nnoremap <silent> <leader>T :NERDTreeToggle<CR>
        nnoremap <silent> <leader>t :NERDTreeFocus<CR>

    " Smooth scroll
        noremap <silent> <c-g> :call smooth_scroll#up(&scroll, 10, 4)<CR>
        noremap <silent> <c-f> :call smooth_scroll#down(&scroll, 10, 4)<CR>

    " DelimitMate
        imap <C-c> <CR><Esc>O

    " Easy Motion
        nmap s <Plug>(easymotion-s2)
        nmap t <Plug>(easymotion-t2)

        map  / <Plug>(easymotion-sn)
        omap / <Plug>(easymotion-tn)

        map  n <Plug>(easymotion-next)
        map  N <Plug>(easymotion-prev)

        map <Leader>l <Plug>(easymotion-lineforward)
        map <Leader>j <Plug>(easymotion-j)
        map <Leader>k <Plug>(easymotion-k)
        map <Leader>h <Plug>(easymotion-linebackward)





" Open last known position
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif



" Force Markdown syntax on md files
    autocmd BufNewFile,BufReadPost *.md set filetype=markdown


" Filetypes
    filetype on
    filetype plugin on
    filetype indent on
    syntax enable

" Colorscheme
    set t_Co=256
    set background=dark
    "colorscheme molokai
    colorscheme PaperColor

" Indentation
    set tabstop=8
    set softtabstop=4
    set shiftwidth=4
    set expandtab
    set smarttab
    set autoindent
    set smartindent

" Don't update the display while executing macros
" -- Possibly outdated with neovim?
" set lazyredraw

" At least let yourself know what mode you're in
    set showmode

" Enable enhanced command-line completion. Presumes you have compiled
" with +wildmenu.  See :help 'wildmenu'
    set wildmenu
    set wildmode=list:longest,full

" Prevent additional files, for dropbox etc
    set directory=~/.vimswp,~/tmp,/var/tmp,/tmp

" Status line
    set laststatus=2
"set statusline=%F%m%r%h%w\ (%{&ff}){%Y}\ [%l,%v][%p%%]

" searching
    set hlsearch " highlight searchterms
    set incsearch " incremental search
    set ignorecase
    set smartcase
    set gdefault " :%s/foo/bar/g == :%s/foo/bar/

" Other settings
    set noshowmatch " don't jump to matching brackets when typing in brackets
    set encoding=utf-8 " encoding
    set number " linenumbers
    set ruler " show where my cursor is
    set nohidden " remove buffer when tab is closed
    set showcmd " show command in status line
    set scrolloff=5 " keep 5 lines around cursor
    set wrap " softwrap long files
    set backspace=2

